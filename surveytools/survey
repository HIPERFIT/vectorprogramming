#!/bin/bash

set -e

SCRIPTFILE=`readlink -f $0`
SCRIPTROOT=`dirname $SCRIPTFILE`
ROOT=$(readlink -f ${SCRIPTROOT}/..)

BUILDROOT=$ROOT/build
BENCHROOT=$ROOT/benchmarks
RESULTROOT=$ROOT/results
HSENVROOT=$BUILDROOT/hsenvs
LOGTAG=$(date +%Y-%m-%d-%H-%M-%S)
LOGDIR=$BUILDROOT/logs/$LOGTAG
mkdir -p $LOGDIR

SURVEYTOOLS_DIR=$SCRIPTROOT
BENCHRESULTS_DIR=$RESULTROOT/benchmark-summaries
BENCH_DIR=$SURVEYTOOLS_DIR/../benchmarks


source $SURVEYTOOLS_DIR/bin/loadHSENV

setup() {
  (
  $SURVEYTOOLS_DIR/setup/install-hsenv --nikola --accelerate-github --vanilla 7.4.2 vanilla --vanilla 7.6.1 vanilla

  #rebuild the benchmarkrunner
  (
    cd $SURVEYTOOLS_DIR/benchmarkrunner
    loadHSENV "buildtools"
    cabal install --only-dependencies
    cabal configure
    cabal build
    deactivate_hsenv
  )
  )  2>&1| tee $LOGDIR/Survey-Setup

}

benchmark() {

  cd $SURVEYTOOLS_DIR/benchmarkrunner
  cp -r $SURVEYTOOLS_DIR/plotting $BENCHRESULTS_DIR/$LOGTAG/
  for experiment in $BENCHROOT/*
  do
    if [ ! -d $experiment ]; then
      continue
    fi
    for instance in $experiment/*
    do
      if [ ! -d $instance ]; then
        continue
      fi
      $SURVEYTOOLS_DIR/benchmarkrunner/run.sh $(basename $experiment) $(basename $instance) $LOGTAG
    done
    #copy the plot settings to summarydir to make the plot generation self contained
    cp $experiment/plot_baseline $BENCHRESULTS_DIR/$LOGTAG/$(basename $experiment)
    cp $experiment/xlabel $BENCHRESULTS_DIR/$LOGTAG/$(basename $experiment)
    cp $experiment/timeunit $BENCHRESULTS_DIR/$LOGTAG/$(basename $experiment)
  done

}

plot() {

  cd $SURVEYTOOLS_DIR/plotting

  # We don't want to do path fiddling inside R.
  LATEST=$(ls -c $BENCHRESULTS_DIR |head -n 1)

  for experimentdir in $BENCHRESULTS_DIR/$LATEST/*
  do
    echo plotting in $experimentdir
    BASELINE=$(cat $experimentdir/plot_baseline)
    XLABEL=$(cat $experimentdir/xlabel)
    TIMEUNIT=$(cat $experimentdir/timeunit)

    Rscript ggplot_speedup.r --args $experimentdir "$BASELINE.csv" "$XLABEL" "$TIMEUNIT"
  done
}

clean () {

  rm -rf $BUILDROOT/hsenvs
  rm -rf $BENCH_DIR/*/*/dist*

  # special cases, should really be handled locally.
  (
    cd $BENCH_DIR/binomial-gpu/CUDA/src-cpp
    make clean || true
    )
  (
    cd $BENCH_DIR/binomial-cpu/C
    make clean || true
    )

}

revdeps () {
  echo "Nothing here yet"

}

show_usage() {
  echo "Collects and plots all survey data"
  echo ""
  echo "Invoke with one or more of the following flags:"
  echo "  --clean         Clean up the various build files"
  echo "  --setup         Setup necessary GHC installations and build benchmarks"
  echo "  --benchmark     Runs benchmarks and generates graphs"
  echo "  --plot          Plot the lastest benchmark execution"
  echo "  --revdeps       Count reverse dependencies"
  echo "  --thebigbutton  Alias for '--setup --benchmark --plot'"
  echo "  --nightly       Alias for ' --benchmark --plot'"
  echo "  --usage"
}

if [ $# -lt 1 ]; then
    echo "No arguments given. Aborting."
    echo ""
    show_usage
    exit 1
fi


while [ $# -gt 0 ]; do
  case $1 in
    --clean)
      clean
      shift
      ;;
    --nightly)
      (
      #clean
      #setup
      benchmark
      plot
      ) &> /dev/null
      shift
      ;;
    --setup)
      setup
      shift
      ;;
    --benchmark)
      benchmark
      shift
      ;;
    --revdeps)
      revdeps
      shift
      ;;
    --thebigbutton)
      setup
      benchmark
      plot
      shift
      ;;
    --plot)
      plot
      shift
      ;;
    --usage)
      show_usage
      break
      ;;
    *)
      echo "Unknown parameter $1"
      show_usage
      break
      ;;
  esac
done
